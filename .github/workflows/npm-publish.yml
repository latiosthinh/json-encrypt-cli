# This workflow will run tests using node and then publish a package to npmjs when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Publish to NPM

on:
  release:
    types: [created]
  # Allow manual trigger for testing
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty for current package.json version)'
        required: false
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
      
      - name: Verify package can be built
        run: |
          # Test that all bin scripts work
          node bin/enc.js --help
          node bin/dec.js --help
          node bin/batch-enc.js --help
          node bin/batch-dec.js --help

  publish-npm:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Update version if specified
        if: github.event.inputs.version != ''
        run: npm version ${{ github.event.inputs.version }} --no-git-tag-version
      
      - name: Verify package contents
        run: |
          echo "Package contents:"
          npm pack --dry-run
          echo "\nPackage info:"
          npm ls --depth=0
      
      - name: Debug NPM Authentication
        run: |
          echo "Checking npm authentication..."
          npm whoami || echo "Not authenticated"
          echo "Registry: $(npm config get registry)"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create GitHub release summary
        run: |
          echo "## ðŸ“¦ Package Published Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Package:** \`$(npm pkg get name | tr -d '"')\`" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** \`$(npm pkg get version | tr -d '"')\`" >> $GITHUB_STEP_SUMMARY
          echo "**Registry:** https://www.npmjs.com/package/$(npm pkg get name | tr -d '"')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸš€ Installation" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "# Install globally" >> $GITHUB_STEP_SUMMARY
          echo "npm install -g $(npm pkg get name | tr -d '"')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Or use with npx" >> $GITHUB_STEP_SUMMARY
          echo "npx json-batch-encrypt <directory>" >> $GITHUB_STEP_SUMMARY
          echo "npx json-batch-decrypt <directory>" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
